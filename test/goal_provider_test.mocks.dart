// Mocks generated by Mockito 5.4.4 from annotations
// in habitwise/test/goal_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:habitwise/models/goal.dart' as _i5;
import 'package:habitwise/services/goals_db_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GoalDBService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoalDBService extends _i1.Mock implements _i3.GoalDBService {
  MockGoalDBService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get groupCollection => (super.noSuchMethod(
        Invocation.getter(#groupCollection),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#groupCollection),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  _i4.Future<void> addGoal(
    String? userId,
    _i5.Goal? goal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGoal,
          [
            userId,
            goal,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addGoalToGroup(
    String? groupId,
    _i5.Goal? goal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGoalToGroup,
          [
            groupId,
            goal,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Stream<List<_i5.Goal>> getUserGoalsStream(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGoalsStream,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i5.Goal>>.empty(),
      ) as _i4.Stream<List<_i5.Goal>>);

  @override
  _i4.Stream<List<_i5.Goal>> getGroupGoalsStream(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupGoalsStream,
          [groupId],
        ),
        returnValue: _i4.Stream<List<_i5.Goal>>.empty(),
      ) as _i4.Stream<List<_i5.Goal>>);

  @override
  _i4.Future<void> removeGoal(
    String? userId,
    String? goalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGoal,
          [
            userId,
            goalId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeGroupGoal(
    String? groupId,
    String? goalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupGoal,
          [
            groupId,
            goalId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateGoal(
    String? userId,
    _i5.Goal? updatedGoal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGoal,
          [
            userId,
            updatedGoal,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateGroupGoal(
    String? groupId,
    _i5.Goal? updatedGoal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroupGoal,
          [
            groupId,
            updatedGoal,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i5.Goal?> getGroupGoal(
    String? groupId,
    String? goalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupGoal,
          [
            groupId,
            goalId,
          ],
        ),
        returnValue: _i4.Future<_i5.Goal?>.value(),
      ) as _i4.Future<_i5.Goal?>);

  @override
  _i4.Future<void> markGoalAsCompleted(
    String? userId,
    String? goalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markGoalAsCompleted,
          [
            userId,
            goalId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> markGroupGoalAsCompleted(
    String? groupId,
    String? goalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markGroupGoalAsCompleted,
          [
            groupId,
            goalId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateGroupGoalProgress(
    _i5.Goal? goal,
    int? updatedProgress, {
    required String? groupId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroupGoalProgress,
          [
            goal,
            updatedProgress,
          ],
          {#groupId: groupId},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
